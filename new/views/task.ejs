<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <link rel="stylesheet" href="/task.css" />
  </head>
  <body>
    <div class="nav-bar">
      <h2><span>Dash</span>board</h2>
      <div class="user">
        <ion-icon name="person-circle"></ion-icon>
        <h3><%= username %></h3>
      </div>
    </div>
    <!-- <div class="notifications">
      <ion-icon name="notifications-outline"></ion-icon>
      <span
        id="notification-count"
        class="notification-badge"
        style="display: none"
        ><%= notificationCount %></span
      >
    </div> -->
    <div class="side-bar">
      <div class="links">
        <nav>
          <ul>
            <li>
              <a href="/task" class="active">Dashboard</a>
              <a href="/alltask"
                >All Task&nbsp;&nbsp;<span id="allTaskCount"
                  ><%= allTaskCount %></span
                ></a
              >
              <a href="/completed"
                >Completed&nbsp;&nbsp;<span id="completedTaskCount"
                  ><%= completedCount %></span
                ></a
              >
              <a href="/priority"
                >Priority&nbsp;&nbsp;<span id="completedTaskCount"
                  ><%= PriorityCount %></span
                ></a
              >
            </li>
          </ul>
        </nav>
      </div>
    </div>
    <div class="User">
      <a href="/logout" class="logout-button"
        ><ion-icon name="log-out"></ion-icon>Logout</a
      >

      <button class="theme-toggle">
        <ion-icon name="moon"></ion-icon>&nbsp;&nbsp;&nbsp;<ion-icon
          name="sunny"
        ></ion-icon>
      </button>
    </div>

    <div class="content">
      <div class="card1">
        <p>All Task</p>
        <ion-icon name="file-tray-full"></ion-icon>
        <span id="allTaskCount"><%= allTaskCount %></span>
      </div>
      <div class="card2">
        <p>Completed</p>
        <ion-icon name="checkmark-circle"></ion-icon>
        <span id="completedTaskCount"><%= completedCount %></span>
      </div>
      <div class="card3">
        <p>Priority</p>
        <ion-icon name="alert-circle"></ion-icon>
        <div class="high">
          <ion-icon name="arrow-up-circle"></ion-icon>
          <span><%= highPriority %></span>
        </div>
        <div class="low">
          <ion-icon name="arrow-down-circle"></ion-icon>
          <span><%= lowPriority %></span>
        </div>
      </div>
    </div>
    <button class="add-button" onclick="displayForm()">
      <ion-icon name="add-circle"></ion-icon>&nbsp;&nbsp;&nbsp;Add
    </button>
    <div class="form" id="add-form">
      <form action="/addtask" method="post">
        <input
          type="text"
          name="task"
          placeholder="Enter task"
          class="in1"
          required
        />
        <select name="priority">
          <option value="low">Low</option>
          <option value="medium">Medium</option>
          <option value="high">High</option>
        </select>
        <input
          type="date"
          name="dueDate"
          placeholder="Enter due date"
          class="in2"
          required
        />
        <button type="submit"><ion-icon name="add-circle"></ion-icon></button>
      </form>
    </div>

    <script
      type="module"
      src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"
    ></script>
    <script
      nomodule
      src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"
    ></script>
    <script>
      function markAsCompleted(id, userId) {
        fetch("/complete", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id, userId }),
        }).then(() => {
          window.location.reload();
        });
      }

      function removeTodo(id, userId) {
        fetch("/remove", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id, userId }),
        }).then(() => {
          window.location.reload();
        });
      }

      function displayForm() {
        document.getElementById("add-form").style.display = "block";
        setTimeout(() => {
          document.getElementById("add-form").style.opacity = "1";
        }, 50);
      }

      const themeToggle = document.querySelector(".theme-toggle");
      const moonIcon = document.querySelector(
        '.theme-toggle ion-icon[name="moon"]'
      );
      const sunnyIcon = document.querySelector(
        '.theme-toggle ion-icon[name="sunny"]'
      );

      themeToggle.addEventListener("click", function () {
        document.body.classList.toggle("dark-theme");
        if (document.body.classList.contains("dark-theme")) {
          moonIcon.style.display = "inline";
          sunnyIcon.style.display = "none";
        } else {
          moonIcon.style.display = "none";
          sunnyIcon.style.display = "inline";
        }
      });

      async function fetchNotificationCount() {
        try {
          const response = await fetch("/reminders");
          const data = await response.json();
          return data.notificationCount;
        } catch (error) {
          console.error("Error fetching notification count:", error);
          return 0;
        }
      }

      async function updateNotificationBadge() {
        const notificationCount = await fetchNotificationCount();
        if (notificationCount > 0) {
          confirm(`You have ${notificationCount} uncompleted tasks!`);
        }
      }

      // Call updateNotificationBadge() every 20 minutes
      updateNotificationBadge(); // Call once on page load
      setInterval(updateNotificationBadge, 20 * 60 * 1000);
    </script>
  </body>
</html>
